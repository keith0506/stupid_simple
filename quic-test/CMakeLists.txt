PROJECT(project)
cmake_minimum_required(VERSION 2.6)
SET(CMAKE_BUILD_TYPE "Debug")
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g2 -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")
set(CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${COMMON_C_FLAGS} -std=gnu++11")
include_directories(.)
include_directories(/home/zsy/posix_quic-master/libquic/)
LINK_DIRECTORIES(/home/zsy/posix_quic-master/build/libquic/)
LINK_DIRECTORIES(/home/zsy/posix_quic-master/build/libquic/third_party/boringssl/src/ssl)
LINK_DIRECTORIES(/home/zsy/posix_quic-master/build/libquic/third_party/boringssl/src/crypto)
include_directories(myquic)
add_subdirectory(myquic)
include_directories(net)
add_subdirectory(net)
set(EXECUTABLE_NAME "t_recv_manager")
add_executable(${EXECUTABLE_NAME} ${CMAKE_SOURCE_DIR}/test_fun/t_recv_packet_manager.cc)
target_link_libraries(${EXECUTABLE_NAME} framer quic crypto ssl net pthread)

set(EXECUTABLE_NAME "t_sender")
add_executable(${EXECUTABLE_NAME} ${CMAKE_SOURCE_DIR}/test_fun/t_sender.cc)
target_link_libraries(${EXECUTABLE_NAME} framer quic crypto ssl net pthread)

set(EXECUTABLE_NAME "t_video_sender")
add_executable(${EXECUTABLE_NAME} ${CMAKE_SOURCE_DIR}/test_fun/t_video_sender.cc)
target_link_libraries(${EXECUTABLE_NAME} framer quic crypto ssl net pthread)

set(EXECUTABLE_NAME "t_receiver")
add_executable(${EXECUTABLE_NAME} ${CMAKE_SOURCE_DIR}/test_fun/t_receiver.cc)
target_link_libraries(${EXECUTABLE_NAME} framer quic crypto ssl net pthread)
set(EXECUTABLE_NAME "t_command")
add_executable(${EXECUTABLE_NAME} ${CMAKE_SOURCE_DIR}/test_fun/t_command.cc)
#find . -name '*.log' -type f -print -exec rm -rf {} 
